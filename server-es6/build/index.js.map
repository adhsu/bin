{"version":3,"sources":["../server/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import http from 'http'\nimport express from 'express'\nimport cors from 'cors'\nimport bodyParser from 'body-parser'\nimport middleware from './middleware'\nimport api from './api'\nimport session from 'express-session'\nimport config from \"./../config\"\nimport {r, type, Errors} from'./utils/thinky'\nimport {grabTitle} from './utils/scraper'\n\n\n\nimport * as binCtrl from './api/bins'\nimport * as postCtrl from './api/posts'\nimport * as userCtrl from './api/users'\nimport * as reactionCtrl from './api/reactions'\n\n\n\nimport tokenAuth from './utils/tokenAuth'\nimport isAuthorized from './policies/isAuthorized'\nimport isCurrentUser from './policies/isCurrentUser'\nimport isInBin from './policies/isInBin'\n\nimport passport from 'passport'\nimport {Strategy as TwitterStrategy} from 'passport-twitter'\nimport {Strategy as JwtStrategy} from 'passport-jwt'\nvar jwtOpts = {}\njwtOpts.secretOrKey = 'secret';\njwtOpts.issuer = \"accounts.bin.io\";\njwtOpts.audience = \"bin.io\";\n\n\n// const callbackURL = 'http://' + config.url + ':' + config.ports.http + '/auth/login/callback';\nconst callbackURL = \"http://107.170.209.207/auth/login/callback\"\n\nimport Bin from './models/bins'\nimport Post from './models/posts'\nimport User from './models/users'\n\n\n\npassport.use(new JwtStrategy(jwtOpts, function(jwt_payload, done) {\n\n\tUser.get(jwt_payload.sub).run().then(function(users){\n\t  console.log(users)\n\t  return done(null, users[0])\n\t}).catch(Errors.DocumentNotFound, function(err) {\n\t  return done(null, false)\n\t})\n\n}));\n\npassport.use(new TwitterStrategy({\n    consumerKey: config.twitter.consumerKey,\n    consumerSecret: config.twitter.consumerSecret,\n    callbackURL: callbackURL + '/twitter'\n  },\n  function(token, tokenSecret, profile, done) {\n  \tlet objectMapper = function (profile) {\n\t    return {\n\t      'id': profile.username,\n\t      'name': profile.displayName || null,\n\t      'url': profile._raw.expanded_url || null,\n\t      'avatarUrl': profile._json.profile_image_url,\n\t      'type': 'twitter'\n\t    };\n\t  }\n    User.get(profile.username).run().then(function(user){\n\n      user.token = tokenAuth.issue({id: user.id})\n      return done(null, user);\n      \n    }).catch(Errors.DocumentNotFound, function(err) {\n\n      let user = new User(objectMapper(profile))\n\n      user.save().then(function(newUser) {\n      \tnewUser.token = tokenAuth.issue({id: newUser.id})\n      \tdone(null, newUser)\n\n      })\n    })\n\n  }\n))\n\n// Configure Passport authenticated session persistence.\n//\n// In order to restore authentication state across HTTP requests, Passport needs\n// to serialize users into and deserialize users out of the session.  In a\n// production-quality application, this would typically be as simple as\n// supplying the user ID when serializing, and querying the user record by ID\n// from the database when deserializing.  However, due to the fact that this\n// example does not have a database, the complete Twitter profile is serialized\n// and deserialized.\npassport.serializeUser(function(user, cb) {\n  cb(null, user);\n});\n\npassport.deserializeUser(function(obj, cb) {\n  cb(null, obj);\n});\n\n\n\nvar app = express();\napp.server = http.createServer(app);\n\napp.use(require('cookie-parser')());\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: ['Link']\n}));\n\napp.use(bodyParser.json({\n\tlimit : '100kb'\n}));\n\napp.use(require('express-session')({ secret: 'keyboard cat', resave: true, saveUninitialized: true }));\n\napp.use(passport.initialize())\napp.use(passport.session())\n\n\napp.get('/',\n  function(req, res) {\n    res.send(req.user);\n\t});\n\napp.get('/auth/login/twitter', passport.authenticate('twitter', {session: false}))\n\napp.get('/auth/login/callback/twitter', \n  passport.authenticate('twitter', {failureRedirect: '/'}),\n  \tfunction(req, res) {\n      res.redirect('http://bin.cool.s3-website-us-west-1.amazonaws.com/login?access_token='+req.user.token)\n  \t\t// res.send(\"/user?access_token=\" + req.user.token)\n  \t}\n  )\n\napp.get('/', function (req, res) {\n\tconsole.log(req)\n  res.send(req.user);\n});\n\napp.post(\"/title\", grabTitle)\n\napp.get('/user', \n\tisAuthorized,\n\tfunction(req, res) {\n\t  res.send(req.user)\n\t})\n\napp.post('/bins/:binId/join', \n\tisAuthorized,\n\tbinCtrl.joinBin)\n\napp.post('/bins/:id', \n\tisAuthorized,\n\tbinCtrl.createBin)\n\napp.post('/bins/:id/title',\n  isAuthorized,\n  binCtrl.editBinTitle)\n\napp.get('/bins', \n\tisAuthorized,\n\tbinCtrl.fetchUserBins)\n\napp.get('/bins/:id',\n  binCtrl.fetchBin)\n\napp.post('/posts', \n\tisAuthorized,\n\tisInBin,\n\tpostCtrl.createPost)\n\napp.delete('/posts/:postId', \n\tisAuthorized,\n\tpostCtrl.deletePost)\n\n\napp.get('/posts', \n\tisAuthorized,\n\tisInBin,\n\tpostCtrl.fetchPosts)\n\napp.get('/me', \n\tisAuthorized,\n\tuserCtrl.fetchAuthedUser)\n\napp.put('/reactions/:binId/:postId/:emojiId',\n\tisAuthorized,\n\tisInBin,\n\treactionCtrl.addReaction)\n\napp.delete('/reactions/:binId/:postId/:emojiId',\n\tisAuthorized,\n\tisInBin,\n\treactionCtrl.deleteReaction)\n\napp.get('/reactions',\n\tisAuthorized,\n\treactionCtrl.fetchReactions)\n\napp.get('/noAuth', function(req,res) {\n\tres.json({loginStatus: false})\n})\n\napp.get('/auth/logout/twitter', function(req, res) {\n\treq.logout()\n\tres.redirect(\"/noAuth\")\n})\n\n\napp.server.listen(process.env.PORT || 3000);\n\nconsole.log(`Started on port ${app.server.address().port}`);\n\n\n// \t// internal middleware\n// \tapp.use(middleware());\n\n// \t// api router\n// \tapp.use('/api', api());\n\n\t\n\n\nexport default app;\n"]}