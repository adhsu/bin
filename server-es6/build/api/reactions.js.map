{"version":3,"sources":["../../server/api/reactions.js"],"names":[],"mappings":";;;;;QAYgB;QA6BA;QAkBA;;;;AAzDhB,IAAI,MAAM,QAAQ,kBAAR,CAAN;AACJ,IAAI,OAAO,QAAQ,mBAAR,CAAP;AACJ,IAAI,OAAO,QAAQ,mBAAR,CAAP;AACJ,IAAI,WAAW,QAAQ,uBAAR,CAAX;;;;;;AAOG,SAAS,WAAT,CAAqB,GAArB,EAA0B,GAA1B,EAA+B;;;;AAIpC,MAAM,cAAc,IAAI,KAAJ,CAAU,EAAV,GAAe,GAAf,GAAqB,IAAI,MAAJ,CAAW,MAAX,GAAoB,GAAzC,GAA+C,IAAI,MAAJ,CAAW,OAAX,CAJ/B;;AAMpC,WAAS,GAAT,CAAa,WAAb,EAA0B,GAA1B,GAAgC,IAAhC,CAAqC,UAAS,QAAT,EAAkB;AACrD,QAAI,IAAJ,CAAS,EAAC,IAAI,IAAJ,EAAV,EADqD;GAAlB,CAArC,CAEG,KAFH,CAES,eAAO,gBAAP,EAAyB,UAAS,GAAT,EAAc;;AAE9C,QAAM,cAAc;AAClB,cAAQ,IAAI,KAAJ,CAAU,EAAV;AACR,cAAQ,IAAI,MAAJ,CAAW,MAAX;AACR,eAAS,IAAI,MAAJ,CAAW,OAAX;AACT,UAAI,WAAJ;KAJI,CAFwC;;AAS9C,QAAM,WAAW,IAAI,QAAJ,CAAa,WAAb,CAAX,CATwC;;AAW9C,aAAS,IAAT,GAAgB,IAAhB,CAAqB,UAAS,MAAT,EAAgB;AACnC,UAAI,IAAJ,CAAS,EAAC,IAAI,IAAJ,EAAV,EADmC;KAAhB,CAArB,CAX8C;GAAd,CAFlC,CANoC;CAA/B;;;;;;AA6BA,SAAS,cAAT,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC;;AAEvC,MAAM,cAAc,IAAI,KAAJ,CAAU,EAAV,GAAe,GAAf,GAAqB,IAAI,MAAJ,CAAW,MAAX,GAAoB,GAAzC,GAA+C,IAAI,MAAJ,CAAW,OAAX,CAF5B;;AAIvC,WAAS,GAAT,CAAa,WAAb,EAA0B,GAA1B,GAAgC,IAAhC,CAAqC,UAAS,QAAT,EAAkB;AACrD,aAAS,MAAT,GAAkB,IAAlB,CAAuB,UAAS,MAAT,EAAgB;AACrC,aAAO,IAAI,IAAJ,CAAS,EAAC,IAAI,IAAJ,EAAV,CAAP,CADqC;KAAhB,CAAvB,CADqD;GAAlB,CAArC,CAIG,KAJH,CAIS,eAAO,gBAAP,EAAyB,UAAS,GAAT,EAAc;;AAE9C,QAAI,IAAJ,CAAS,EAAC,OAAO,0BAAP,EAAV,EAF8C;GAAd,CAJlC,CAJuC;CAAlC;;;;;;AAkBA,SAAS,cAAT,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC;AACvC,MAAM,SAAS,IAAI,KAAJ,CAAU,EAAV,CADwB;AAEvC,WAAS,MAAT,CAAgB,MAAhB,EAAwB,EAAC,OAAO,QAAP,EAAzB,EAA2C,GAA3C,GAAiD,IAAjD,CAAsD,UAAS,SAAT,EAAoB;AACxE,QAAI,IAAJ,CAAS,SAAT,EADwE;GAApB,CAAtD,CAEG,KAFH,CAES,eAAO,gBAAP,EAAyB,UAAS,GAAT,EAAa;AAC7C,QAAI,IAAJ,CAAS,YAAT,EAD6C;GAAb,CAFlC,CAFuC;CAAlC","file":"reactions.js","sourcesContent":["import {r, type, Errors} from'./../utils/thinky.js'\n\nvar Bin = require('./../models/bins')\nvar Post = require('./../models/posts')\nvar User = require('./../models/users')\nvar Reaction = require('./../models/reactions')\n\n\n// addReaction - idempotent!\n// PUT /api/reactions/:binId/:postId/:emojiId\n// query params {auth_token}\n// => {ok: true}\nexport function addReaction(req, res) {\n\n  //security assumption: bin exists and user is in that bin\n\n  const reaction_id = req.token.id + '_' + req.params.postId + '_' + req.params.emojiId\n\n  Reaction.get(reaction_id).run().then(function(reaction){\n    res.json({ok: true})\n  }).catch(Errors.DocumentNotFound, function(err) {\n    \n    const reactionObj = {\n      userId: req.token.id,\n      postId: req.params.postId,\n      emojiId: req.params.emojiId,\n      id: reaction_id\n    }\n\n    const reaction = new Reaction(reactionObj)\n\n    reaction.save().then(function(result){\n      res.json({ok: true})\n    })\n  })\n}\n\n// deleteReaction\n// DELETE /api/reactions/:binid/:postId/:emojiId\n// query params {auth_token}\n// => {ok: true}\nexport function deleteReaction(req, res) {\n  // make sure user owns reaction implicitly with auth_token userId\n  const reaction_id = req.token.id + '_' + req.params.postId + '_' + req.params.emojiId\n\n  Reaction.get(reaction_id).run().then(function(reaction){\n    reaction.delete().then(function(result){\n      return res.json({ok: true})\n    })\n  }).catch(Errors.DocumentNotFound, function(err) {\n    \n    res.json({\"err\": \"Reaction does not exist.\"})\n  })\n}\n\n// fetchReactions\n// GET /reactions\n// query params {auth_token}\n// => array of reaction objects [ {id, postId, emojiId, createdAt} ]\nexport function fetchReactions(req, res) {\n  const userId = req.token.id\n  Reaction.getAll(userId, {index: 'userId'}).run().then(function(reactions) {\n    res.json(reactions)\n  }).catch(Errors.DocumentNotFound, function(err){\n    res.send('none found')\n  })\n}\n\n"]}