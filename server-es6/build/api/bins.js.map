{"version":3,"sources":["../../server/api/bins.js"],"names":[],"mappings":"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","file":"bins.js","sourcesContent":["import {r, type, Errors} from './../utils/thinky.js'\nimport {nouns, adjectives} from '../utils/words'\nvar Bin = require('./../models/bins')\nvar Post = require('./../models/posts')\nvar User = require('./../models/users')\n\n\nfunction generateInviteCode() {\n  const adj = adjectives[Math.floor(Math.random()*adjectives.length)]\n  const noun = nouns[Math.floor(Math.random()*nouns.length)]\n  const invite_code = `${adj}-${noun}`\n  console.log('generating invite code', invite_code)\n  return invite_code\n}\n\n// createBin\n// POST /api/bins/:id\n// query params {token}\n// => bin\nexport function createBin(req, res) {\n  const binId = req.params.id\n  const userId = req.token.id\n\n  Bin.get(binId).getJoin({users: true}).run().then(function(bin){\n    res.json({err: 'Bin already exists'})\n  }).catch(Errors.DocumentNotFound, function(err) {\n    \n    let bin = new Bin({\n      id: binId,\n      title: 'Click here to set the title...',\n      invite_code: generateInviteCode()\n    })\n\n    User.get(userId).run().then(function(user){\n      bin.users = [user]\n      bin.saveAll({users: true}).then((result) => {\n        res.send(bin)\n      })\n    }) \n  })\n}\n\n\n// joinBin\n// POST /api/bins/:id/join\n// query params {token}\n// body {invite_code}\n// => {ok: true}\nexport function joinBin(req, res) {\n\n  const invite_code = req.body.invite_code\n  const binId = req.params.binId\n  const userId = req.token.id\n  // Find Bin, see that it exists, match invite_code, add user to bin \n\n  Bin.get(binId).getJoin({users: true}).run().then(function(bin){\n    // bin exists \n    if (bin.invite_code == invite_code) {\n      //invite_code matches \n      User.get(userId).run().then(function(user){\n        bin.users.push(user)\n        bin.saveAll({users: true}).then((result) => {\n          res.send({\n            ok: true,\n            bin\n          })\n        })\n      }) \n    } else {\n      res.send({\n        ok: false,\n        message: `Ah ah ah, you didn't say the magic word!`\n      })\n    }\n    \n  }).catch(Errors.DocumentNotFound, function(err) {\n    res.json({err: 'Bin does not exist.'})\n  })\n}\n\n// editBinTitle\n// POST /api/bins/:id/title\n// query params {token}\n// body {title}\n// => {ok: true}\nexport function editBinTitle(req, res) {\n  const binId = req.params.id\n  const userId = req.token.id\n  const title = req.body.title\n  Bin.get(binId).update({title}).run().then(function(bin) {\n    res.json({\n      ok: true,\n      bin\n    })\n  })\n}\n\n// fetchUserBins\n// GET /api/bins\n// query params {auth_token}\n// => {bins}\nexport function fetchUserBins(req, res) {\n  const userId = req.token.id \n\n  User.get(userId).getJoin({bins: {users: {avatarUrl: true, id: true, name: true}}}).run().then(function(user){\n    res.json(user.bins)\n  })\n}\n\n// GET /api/bins/:id\n// query params {token}\n// => {ok: true}\nexport function fetchBin(req, res) {\n  const binId = req.params.id\n\n  Bin.get(binId).run().then(function(bin){\n    // bin exists \n    res.send({ok: true, exists: true})\n  }).catch(Errors.DocumentNotFound, function(err) {\n    res.json({\n      ok: false,\n      exists: false,\n      err: 'Bin does not exist.'\n    })\n  })\n}\n"]}