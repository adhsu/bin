{"version":3,"sources":["../../server/auth/index.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAI,kBAAkB,QAAQ,kBAAR,EAA4B,QAA5B;;;;AAUtB,mBAAS,aAAT,CAAuB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AAC3C,SAAO,KAAK,IAAL,EAAW,KAAK,EAAL,CAAlB,CAD2C;CAAtB,CAAvB;;AAIA,mBAAS,eAAT,CAAyB,UAAU,EAAV,EAAc,IAAd,EAAoB;AAC3C,YACG,KADH,CACS,OADT,EAEG,GAFH,CAEO,EAFP,EAGG,GAHH,CAGO,UAAE,IAAF,CAHP,CAIG,IAJH,CAIQ,UAAU,IAAV,EAAgB;AACpB,SAAK,IAAL,EAAW,IAAX,EADoB;GAAhB,CAJR,CAD2C;CAApB,CAAzB;;AAUA,IAAI,uBAAuB,SAAvB,oBAAuB,CAAU,YAAV,EAAwB,IAAxB,EAA8B;AACvD,SAAO,UAAU,WAAV,EAAuB,YAAvB,EAAqC,OAArC,EAA8C,IAA9C,EAAoD;AACzD,QAAI,gBAAgB,IAAhB,EAAsB;;AAExB,sBAAK,GAAL,CAAS,QAAQ,QAAR,CAAT,CAA2B,GAA3B,GAAiC,IAAjC,CAAsC,UAAS,KAAT,EAAe;AACnD,eAAO,KAAK,IAAL,EAAW,MAAM,CAAN,CAAX,CAAP,CADmD;OAAf,CAAtC,CAGG,KAHH,CAGS,eAAO,gBAAP,EAAyB,UAAS,GAAT,EAAc;AAC9C,YAAI,OAAO,oBAAS,aAAa,OAAb,CAAT,CAAP;;AAD0C,eAGvC,KAAK,IAAL,GAAY,IAAZ,CAAiB,UAAS,QAAT,EAAmB;AACzC,iBAAO,gBAAK,GAAL,CAAS,SAAS,cAAT,CAAwB,CAAxB,CAAT,EAAqC,GAArC,EAAP,CADyC;SAAnB,CAAxB,CAH8C;OAAd,CAHlC,CASG,IATH,CASQ,UAAU,OAAV,EAAmB;AACzB,aAAK,IAAL,EAAW,OAAX,EADyB;OAAnB,CATR,CAFwB;KAA1B;GADK,CADgD;CAA9B;AAmB3B,IAAI,cAAc,YAAY,iBAAO,GAAP,GAAa,GAAzB,GAA+B,iBAAO,KAAP,CAAa,IAAb,GAAoB,sBAAnD;;;AAIlB,mBAAS,GAAT,CAAa,IAAI,eAAJ,CAAoB;AAC7B,eAAa,iBAAO,OAAP,CAAe,WAAf;AACb,kBAAgB,iBAAO,OAAP,CAAe,cAAf;AAChB,eAAa,cAAc,UAAd;CAHJ,EAKX,qBAAqB,UAAU,OAAV,EAAmB;AACtC,SAAO;AACL,UAAM,QAAQ,QAAR;AACN,YAAQ,QAAQ,WAAR,IAAuB,IAAvB;AACR,WAAO,QAAQ,IAAR,CAAa,YAAb,IAA6B,IAA7B;AACP,iBAAa,QAAQ,KAAR,CAAc,iBAAd;AACb,YAAQ,SAAR;GALF,CADsC;CAAnB,EAQlB,SARH,CALW,CAAb;;AAgBA,mBAAS,eAAT,GAA2B,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACnD,MAAI,IAAI,IAAJ,EAAU;AACZ,WAAO,MAAP,CADY;GAAd;AAGA,SAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,uBAArB,CAAP,CAJmD;CAA1B;;AAO3B,OAAO,OAAP","file":"index.js","sourcesContent":["/*jshint node:true */\n'use strict';\n\nimport config from \"./../../config\"\nimport passport from 'passport'\nvar TwitterStrategy = require('passport-twitter').Strategy;\n\nimport {r, type, Errors} from'./../utils/thinky.js'\n\nimport Bin from './../models/bins'\nimport Post from './../models/posts'\nimport User from './../models/users'\n\n// var r = require('../db');\n\npassport.serializeUser(function (user, done) {\n  return done(null, user.id);\n});\n\npassport.deserializeUser(function (id, done) {\n  r\n    .table('users')\n    .get(id)\n    .run(r.conn)\n    .then(function (user) {\n      done(null, user);\n    });\n});\n\nvar loginCallbackHandler = function (objectMapper, type) {\n  return function (accessToken, refreshToken, profile, done) {\n    if (accessToken !== null) {\n\n      User.get(profile.username).run().then(function(users){\n        return done(null, users[0]);\n        \n      }).catch(Errors.DocumentNotFound, function(err) {\n        let user = new User(objectMapper(profile))\n        // ToDo: add default bin - or have that be a step after signing in?\n        return user.save().then(function(response) {\n          return User.get(response.generated_keys[0]).run()\n        })\n      }).then(function (newUser) {\n        done(null, newUser)\n      })\n    }\n  };\n};\nvar callbackURL = 'http://' + config.url + ':' + config.ports.http + '/auth/login/callback';\n\n\n// Twitter\npassport.use(new TwitterStrategy({\n    consumerKey: config.twitter.consumerKey,\n    consumerSecret: config.twitter.consumerSecret,\n    callbackURL: callbackURL + '/twitter'\n  },\n  loginCallbackHandler(function (profile) {\n    return {\n      'id': profile.username,\n      'name': profile.displayName || null,\n      'url': profile._raw.expanded_url || null,\n      'avatarUrl': profile._json.profile_image_url,\n      'type': 'twitter'\n    };\n  }, 'twitter')\n));\n\npassport.checkIfLoggedIn = function (req, res, next) {\n  if (req.user) {\n    return next();\n  }\n  return res.status(401).send('You\\'re not logged in');\n};\n\nmodule.exports = passport;\n"]}